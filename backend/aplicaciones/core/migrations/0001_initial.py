# Generated by Django 4.2.11 on 2025-06-15 10:08

import aplicaciones.core.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Empresa",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "ruc",
                    models.CharField(
                        help_text="Registro Único de Contribuyente (11 dígitos)",
                        max_length=11,
                        unique=True,
                        validators=[aplicaciones.core.models.validar_ruc_peruano],
                        verbose_name="RUC",
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(
                        help_text="Razón social de la empresa",
                        max_length=255,
                        verbose_name="Razón Social",
                    ),
                ),
                (
                    "nombre_comercial",
                    models.CharField(
                        blank=True,
                        help_text="Nombre comercial de la empresa (opcional)",
                        max_length=255,
                        verbose_name="Nombre Comercial",
                    ),
                ),
                (
                    "direccion_fiscal",
                    models.TextField(
                        help_text="Dirección fiscal registrada en SUNAT",
                        verbose_name="Dirección Fiscal",
                    ),
                ),
                (
                    "ubigeo",
                    models.CharField(
                        blank=True,
                        help_text="Código de ubigeo INEI (6 dígitos)",
                        max_length=6,
                        validators=[aplicaciones.core.models.validar_ubigeo_peruano],
                        verbose_name="Ubigeo",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        help_text="Teléfono principal de contacto",
                        max_length=20,
                        verbose_name="Teléfono",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Correo electrónico principal",
                        max_length=254,
                        verbose_name="Email",
                    ),
                ),
                (
                    "representante_legal",
                    models.CharField(
                        blank=True,
                        help_text="Nombre del representante legal",
                        max_length=255,
                        verbose_name="Representante Legal",
                    ),
                ),
                (
                    "usuario_sol",
                    models.CharField(
                        blank=True,
                        help_text="Usuario SOL para SUNAT",
                        max_length=20,
                        verbose_name="Usuario SOL",
                    ),
                ),
                (
                    "clave_sol",
                    models.CharField(
                        blank=True,
                        help_text="Clave SOL para SUNAT (encriptada)",
                        max_length=255,
                        verbose_name="Clave SOL",
                    ),
                ),
                (
                    "certificado_digital",
                    models.FileField(
                        blank=True,
                        help_text="Archivo del certificado digital (.pfx)",
                        null=True,
                        upload_to="certificados/",
                        verbose_name="Certificado Digital",
                    ),
                ),
                (
                    "clave_certificado",
                    models.CharField(
                        blank=True,
                        help_text="Clave del certificado digital (encriptada)",
                        max_length=255,
                        verbose_name="Clave Certificado",
                    ),
                ),
                (
                    "metadatos",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Información adicional en formato JSON",
                        verbose_name="Metadatos",
                    ),
                ),
            ],
            options={
                "verbose_name": "Empresa",
                "verbose_name_plural": "Empresas",
                "db_table": "core_empresa",
                "ordering": ["razon_social"],
            },
        ),
        migrations.CreateModel(
            name="TipoComprobante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código SUNAT del tipo de comprobante",
                        max_length=2,
                        unique=True,
                        verbose_name="Código SUNAT",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre del tipo de comprobante",
                        max_length=100,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True,
                        help_text="Descripción detallada",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "requiere_serie",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si requiere serie para numeración",
                        verbose_name="Requiere Serie",
                    ),
                ),
                (
                    "formato_serie",
                    models.CharField(
                        default="F###",
                        help_text="Formato de la serie (ej: F###, B###)",
                        max_length=10,
                        verbose_name="Formato Serie",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tipo de Comprobante",
                "verbose_name_plural": "Tipos de Comprobante",
                "db_table": "core_tipo_comprobante",
                "ordering": ["codigo"],
            },
        ),
        migrations.CreateModel(
            name="Sucursal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único de la sucursal",
                        max_length=10,
                        verbose_name="Código",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        help_text="Nombre de la sucursal",
                        max_length=255,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "direccion",
                    models.TextField(
                        help_text="Dirección de la sucursal", verbose_name="Dirección"
                    ),
                ),
                (
                    "ubigeo",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        validators=[aplicaciones.core.models.validar_ubigeo_peruano],
                        verbose_name="Ubigeo",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "es_principal",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si es la sucursal principal",
                        verbose_name="Es Principal",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="sucursales",
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sucursal",
                "verbose_name_plural": "Sucursales",
                "db_table": "core_sucursal",
                "ordering": ["empresa", "nombre"],
                "unique_together": {("empresa", "codigo")},
            },
        ),
        migrations.CreateModel(
            name="Configuracion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "igv_porcentaje",
                    models.DecimalField(
                        decimal_places=2,
                        default=18.0,
                        help_text="Porcentaje de IGV (18.0 por defecto)",
                        max_digits=5,
                        verbose_name="IGV %",
                    ),
                ),
                (
                    "moneda_defecto",
                    models.CharField(
                        choices=[
                            ("PEN", "Soles Peruanos"),
                            ("USD", "Dólares Americanos"),
                            ("EUR", "Euros"),
                        ],
                        default="PEN",
                        max_length=3,
                        verbose_name="Moneda por Defecto",
                    ),
                ),
                (
                    "numeracion_automatica",
                    models.BooleanField(
                        default=True,
                        help_text="Generar numeración automáticamente",
                        verbose_name="Numeración Automática",
                    ),
                ),
                (
                    "envio_automatico_sunat",
                    models.BooleanField(
                        default=True,
                        help_text="Enviar automáticamente comprobantes a SUNAT",
                        verbose_name="Envío Automático SUNAT",
                    ),
                ),
                (
                    "envio_email_cliente",
                    models.BooleanField(
                        default=False,
                        help_text="Enviar comprobante por email al cliente",
                        verbose_name="Envío Email Cliente",
                    ),
                ),
                (
                    "metodo_valuacion",
                    models.CharField(
                        choices=[
                            ("PEPS", "PEPS (Primeras Entradas, Primeras Salidas)"),
                            ("UEPS", "UEPS (Últimas Entradas, Primeras Salidas)"),
                            ("PROMEDIO", "Promedio Ponderado"),
                        ],
                        default="PEPS",
                        max_length=10,
                        verbose_name="Método de Valuación",
                    ),
                ),
                (
                    "control_stock",
                    models.BooleanField(
                        default=True,
                        help_text="Activar control de stock en tiempo real",
                        verbose_name="Control de Stock",
                    ),
                ),
                (
                    "formato_fecha",
                    models.CharField(
                        choices=[
                            ("DD/MM/YYYY", "DD/MM/YYYY"),
                            ("MM/DD/YYYY", "MM/DD/YYYY"),
                            ("YYYY-MM-DD", "YYYY-MM-DD"),
                        ],
                        default="DD/MM/YYYY",
                        max_length=20,
                        verbose_name="Formato de Fecha",
                    ),
                ),
                (
                    "parametros",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Configuraciones adicionales en formato JSON",
                        verbose_name="Parámetros",
                    ),
                ),
                (
                    "empresa",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuracion",
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración",
                "verbose_name_plural": "Configuraciones",
                "db_table": "core_configuracion",
            },
        ),
        migrations.CreateModel(
            name="SerieComprobante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "serie",
                    models.CharField(
                        help_text="Serie del comprobante (ej: F001, B001)",
                        max_length=4,
                        verbose_name="Serie",
                    ),
                ),
                (
                    "numero_actual",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Último número utilizado",
                        verbose_name="Número Actual",
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="series",
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "sucursal",
                    models.ForeignKey(
                        blank=True,
                        help_text="Sucursal que usa esta serie (opcional)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.sucursal",
                        verbose_name="Sucursal",
                    ),
                ),
                (
                    "tipo_comprobante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.tipocomprobante",
                        verbose_name="Tipo de Comprobante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Serie de Comprobante",
                "verbose_name_plural": "Series de Comprobante",
                "db_table": "core_serie_comprobante",
                "ordering": ["empresa", "tipo_comprobante", "serie"],
                "unique_together": {("empresa", "tipo_comprobante", "serie")},
            },
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Fecha y hora de creación del registro",
                        verbose_name="Fecha de Creación",
                    ),
                ),
                (
                    "fecha_actualizacion",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Fecha y hora de última actualización",
                        verbose_name="Fecha de Actualización",
                    ),
                ),
                (
                    "activo",
                    models.BooleanField(
                        default=True,
                        help_text="Indica si el registro está activo",
                        verbose_name="Activo",
                    ),
                ),
                (
                    "tipo_documento",
                    models.CharField(
                        choices=[
                            ("dni", "DNI"),
                            ("ruc", "RUC"),
                            ("pasaporte", "Pasaporte"),
                            ("carnet_extranjeria", "Carnet de Extranjería"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Documento",
                    ),
                ),
                (
                    "numero_documento",
                    models.CharField(
                        help_text="DNI (8 dígitos), RUC (11 dígitos), etc.",
                        max_length=11,
                        verbose_name="Número de Documento",
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(
                        help_text="Razón social para empresas o nombres completos para personas",
                        max_length=255,
                        verbose_name="Razón Social / Nombres",
                    ),
                ),
                (
                    "nombre_comercial",
                    models.CharField(
                        blank=True,
                        help_text="Nombre comercial (opcional)",
                        max_length=255,
                        verbose_name="Nombre Comercial",
                    ),
                ),
                (
                    "direccion",
                    models.TextField(
                        blank=True,
                        help_text="Dirección completa",
                        verbose_name="Dirección",
                    ),
                ),
                (
                    "ubigeo",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        validators=[aplicaciones.core.models.validar_ubigeo_peruano],
                        verbose_name="Ubigeo",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "contacto_principal",
                    models.CharField(
                        blank=True,
                        help_text="Nombre del contacto principal",
                        max_length=255,
                        verbose_name="Contacto Principal",
                    ),
                ),
                (
                    "limite_credito",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Límite de crédito para ventas al crédito",
                        max_digits=12,
                        verbose_name="Límite de Crédito",
                    ),
                ),
                (
                    "dias_credito",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Días de crédito permitidos",
                        verbose_name="Días de Crédito",
                    ),
                ),
                (
                    "metadatos",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Metadatos"
                    ),
                ),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="clientes",
                        to="core.empresa",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "db_table": "core_cliente",
                "ordering": ["razon_social"],
                "indexes": [
                    models.Index(
                        fields=["numero_documento"],
                        name="core_client_numero__d0bea7_idx",
                    ),
                    models.Index(
                        fields=["razon_social"], name="core_client_razon_s_665cdc_idx"
                    ),
                    models.Index(
                        fields=["empresa", "activo"],
                        name="core_client_empresa_3e5af4_idx",
                    ),
                ],
                "unique_together": {("empresa", "numero_documento")},
            },
        ),
    ]
